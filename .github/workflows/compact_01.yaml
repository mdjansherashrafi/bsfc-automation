name: CI - Deploy to OKE_01
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
      - uses: actions/checkout@v4

      - name: Install OCI CLI & kubectl
        run: |
         set -euxo pipefail
         if ! command -v oci >/dev/null; then
         curl -fsSL -o install.sh https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
         chmod +x install.sh
         sudo ./install.sh --accept-all-defaults \
         --install-dir /usr/local/lib/oracle-cli \
         --exec-dir /usr/local/bin
         # ensure PATH refreshed
         echo "/usr/local/bin" >> $GITHUB_PATH
         hash -r
         fi
         oci --version
         # install kubectl
         curl -fsSLo kubectl "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
         sudo install -m 0755 kubectl /usr/local/bin/kubectl


      - name: Configure OCI CLI
        run: |
          set -euxo pipefail
          mkdir -p ~/.oci
          echo "${{ secrets.OCI_CLI_KEY_CONTENT }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          cat > ~/.oci/config <<EOF
          [DEFAULT]
          user=${{ env.OCI_CLI_USER }}
          tenancy=${{ env.OCI_CLI_TENANCY }}
          fingerprint=${{ env.OCI_CLI_FINGERPRINT }}
          key_file=$HOME/.oci/oci_api_key.pem
          region=${{ env.OCI_CLI_REGION }}
          EOF
          oci iam region list >/dev/null

      - name: Setup Bastion SSH Tunnel
        run: |
         set -euxo pipefail
         mkdir -p ~/.ssh && chmod 700 ~/.ssh
         ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
         ssh-keyscan -H "${{ secrets.BASTION_HOST }}" >> ~/.ssh/known_hosts

         OKE_PRIVATE_IP=$(oci ce cluster get \
         --cluster-id "${{ secrets.OKE_CLUSTER_OCID }}" \
         --query 'data."endpoints"."private-endpoint"' \
         --raw-output | cut -d: -f1)
         echo "oke_private_ip=$OKE_PRIVATE_IP" >> $GITHUB_ENV

         SESSION_JSON=$(oci bastion session create-port-forwarding \
         --bastion-id "${{ secrets.BASTION_OCID }}" \
         --display-name "gh-oke-tunnel" \
         --ssh-public-key-file ~/.ssh/id_rsa.pub \
         --target-private-ip "$OKE_PRIVATE_IP" \
         --target-port 6443 \
         --wait-for-state SUCCEEDED)

         SESSION_ID=$(echo "$SESSION_JSON" | jq -r '.data.id')
         echo "bastion_session_ocid=$SESSION_ID" >> $GITHUB_ENV


      - name: Start Tunnel & Configure kubeconfig
        run: |
          set -euxo pipefail
          ssh -i ~/.ssh/id_rsa -fN -L 6443:${{ env.oke_private_ip }}:6443 "${{ env.bastion_session_ocid }}@${{ secrets.BASTION_HOST }}"
          for i in {1..10}; do nc -z 127.0.0.1 6443 && break || sleep 2; done
          mkdir -p ~/.kube
          oci ce cluster create-kubeconfig \
            --cluster-id "${{ secrets.OKE_CLUSTER_OCID }}" \
            --file ~/.kube/config \
            --region "${{ env.OCI_CLI_REGION }}" \
            --token-version 2.0.0 \
            --kube-endpoint PRIVATE_ENDPOINT
          sed -i "s|${{ env.oke_private_ip }}|127.0.0.1|g" ~/.kube/config
          kubectl cluster-info

      - name: Verify Cluster
        run: |
          set -euxo pipefail
          kubectl version --client
          kubectl get nodes -o wide
          kubectl get ns

      - name: Cleanup Bastion Session
        if: always()
        run: |
          set -euxo pipefail
          oci bastion session delete --session-id "${{ env.bastion_session_ocid }}" --force || true
